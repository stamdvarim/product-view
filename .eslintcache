[{"C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\index.js":"1","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\App.js":"2","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\reportWebVitals.js":"3","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Form.jsx":"4","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Time.jsx":"5","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Accordion.jsx":"6","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Table.jsx":"7","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\ShareButton.jsx":"8","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\AddGuard.jsx":"9","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\algo\\calculator.js":"10","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\algo\\CastToDiconary.js":"11","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\GuardTime.jsx":"12","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Select.jsx":"13","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\index.js":"14","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\reportWebVitals.js":"15","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\App.js":"16","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Form.jsx":"17","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\algo\\calculator.js":"18","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Time.jsx":"19","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\AddGuard.jsx":"20","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Table.jsx":"21","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\ShareButton.jsx":"22","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Accordion.jsx":"23","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\algo\\CastToDiconary.js":"24","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\GuardTime.jsx":"25","C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Select.jsx":"26"},{"size":934,"mtime":1611583291505,"results":"27","hashOfConfig":"28"},{"size":918,"mtime":1611583291497,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1611583291506,"results":"30","hashOfConfig":"28"},{"size":11184,"mtime":1611588157713,"results":"31","hashOfConfig":"28"},{"size":1766,"mtime":1611583291502,"results":"32","hashOfConfig":"28"},{"size":3995,"mtime":1611588384898,"results":"33","hashOfConfig":"28"},{"size":1768,"mtime":1611588998611,"results":"34","hashOfConfig":"28"},{"size":1652,"mtime":1611583291502,"results":"35","hashOfConfig":"28"},{"size":1122,"mtime":1611583291499,"results":"36","hashOfConfig":"28"},{"size":1456,"mtime":1611586551500,"results":"37","hashOfConfig":"28"},{"size":428,"mtime":1611583291498,"results":"38","hashOfConfig":"28"},{"size":827,"mtime":1611588204180,"results":"39","hashOfConfig":"28"},{"size":668,"mtime":1611590310538,"results":"40","hashOfConfig":"28"},{"size":934,"mtime":1611593679906,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1611593679906,"results":"43","hashOfConfig":"42"},{"size":974,"mtime":1611593910624,"results":"44","hashOfConfig":"42"},{"size":11185,"mtime":1611593948012,"results":"45","hashOfConfig":"42"},{"size":1456,"mtime":1611593679901,"results":"46","hashOfConfig":"42"},{"size":1766,"mtime":1611593679903,"results":"47","hashOfConfig":"42"},{"size":1122,"mtime":1611593679902,"results":"48","hashOfConfig":"42"},{"size":1768,"mtime":1611593679903,"results":"49","hashOfConfig":"42"},{"size":1652,"mtime":1611593679903,"results":"50","hashOfConfig":"42"},{"size":3995,"mtime":1611593679901,"results":"51","hashOfConfig":"42"},{"size":428,"mtime":1611593679901,"results":"52","hashOfConfig":"42"},{"size":827,"mtime":1611593679902,"results":"53","hashOfConfig":"42"},{"size":668,"mtime":1611593679903,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1izt5ks",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rl0dhd",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\index.js",[],["113","114"],"C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\App.js",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\reportWebVitals.js",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Form.jsx",["115"],"import React, { useState } from 'react';\r\n//algo\r\nimport { calculateGuards } from '../algo/calculator';\r\n//material libs\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ExposureIcon from '@material-ui/icons/Exposure';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n//mine components \r\nimport { Time } from './Time';\r\nimport { AddGuard } from './AddGuard';\r\nimport { ControlledAccordions } from \"./Accordion\";\r\nimport Table from './Table';\r\nimport { Typography } from '@material-ui/core';\r\nimport ShareButton from './ShareButton';\r\nimport moment from 'moment';\r\n\r\n//..............................................................................................\r\n//setting Time\r\n//..............................................................................................\r\nconst now = new Date();\r\nconst year = now.getFullYear();\r\nconst month = now.getMonth().toString().length === 1 ? '0' + (now.getMonth() + 1).toString() : now.getMonth() + 1;\r\nconst date = now.getDate().toString().length === 1 ? '0' + (now.getDate()).toString() : now.getDate();\r\nconst hours = now.getHours().toString().length === 1 ? '0' + now.getHours().toString() : now.getHours();\r\nconst minutes = now.getMinutes().toString().length === 1 ? '0' + now.getMinutes().toString() : now.getMinutes();\r\nconst formattedDateTime = year + '-' + month + '-' + date + 'T' + hours + ':' + minutes;\r\nconst hoursEnd = (now.getHours() + 1).toString().length === 1 ? '0' + (now.getHours() + 1).toString() : now.getHours() + 1;\r\nconst formattedDateTimeEnd = year + '-' + month + '-' + date + 'T' + hoursEnd + ':' + minutes;\r\n\r\nconst Form = () => {\r\n\r\n    //..............................................................................................\r\n    //useStyle\r\n    //..............................................................................................\r\n    const useStylesButton = makeStyles((theme) => ({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n    }));\r\n\r\n    //..............................................................................................\r\n    //classes\r\n    //..............................................................................................\r\n    const classesButton = useStylesButton();\r\n\r\n    //..............................................................................................\r\n    // use state\r\n    //..............................................................................................\r\n\r\n    const [persons, setPersons] = useState([]);\r\n    const [currentPersonName, setCurrentPersonName] = useState(\"\");\r\n    const [startDate, setStartDate] = useState(formattedDateTime);\r\n    const [endDate, setEndDate] = useState(formattedDateTimeEnd);\r\n    const [guardTime, setGuardTime] = useState();\r\n    const [guardsView, setGuardsView] = useState([]);\r\n    const [minuteHour, setMinuteHour] = useState(\"minute\");\r\n    const [isEqualTime, setIsEqualTime] = useState(true);\r\n\r\n    //..............................................................................................\r\n    //function\r\n    //..............................................................................................\r\n\r\n\r\n    //track person name\r\n    const onChangePersonName = (e) => {\r\n        setCurrentPersonName(e.target.value);\r\n    }\r\n\r\n    //add person by push add button\r\n    const addToPersons = () => {\r\n        if (!currentPersonName || !currentPersonName.trimStart().trimEnd()) {\r\n            return alert(\"יש להכניס שם חוקי\");\r\n        }\r\n        if (persons.includes(currentPersonName)) {\r\n            return alert(\"שם כבר קיים!\");\r\n        }\r\n        setPersons(persons => [...persons, currentPersonName]);\r\n        setCurrentPersonName(\"\");\r\n    }\r\n\r\n    //using enter to add person\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter' || e.keyCode === 13 || e.which === 13) {\r\n            addToPersons();\r\n        }\r\n    }\r\n    //selete person\r\n    const deletePerson = (index) => {\r\n        setPersons(persons => {\r\n            const newPersons = [...persons];\r\n            newPersons.splice(index, 1);\r\n            return newPersons;\r\n        });\r\n    }\r\n\r\n    //claculate list of persons after adding...\r\n    const calculatePersonsEvenTime = (isRandom) => {\r\n        if (startDate === \"\" || endDate === \"\") {\r\n            return alert(\"יש להכניס תאריך התחלה ותאריך סיום\");\r\n        }\r\n        if (persons.length <= 1) {\r\n            return alert(\"יש להכניס לפחות 2 שומרים\");\r\n        }\r\n        if (startDate >= endDate) {\r\n            return alert(\"זמן סוף השמירה חייב להיות גדול מזמן התחלת השמירה\");\r\n        }\r\n        setIsEqualTime(true);\r\n        const countGuards = persons.length;\r\n        console.log(countGuards, \"countGuards\");\r\n        const sumTime = moment(endDate).diff(moment(startDate), minuteHour);\r\n        console.log(sumTime, \"sumTime\");\r\n        const evenguardTime = sumTime / countGuards != 0 ? Math.floor(sumTime / countGuards) : Math.ceil(sumTime / countGuards);\r\n        console.log(evenguardTime, \"evenguardTime\", evenguardTime / 60, \"evenguardTime in houers\");\r\n        if (evenguardTime > (6 * 60)) {\r\n            alert(\"זמן השמירה יצא גדול מ6 שעות, אולי כדאי להגדיר זמן שמירה?\");\r\n        }\r\n        setGuardsView(calculateGuards(persons, startDate, endDate, evenguardTime, minuteHour, isRandom));\r\n    }\r\n\r\n    const calculatePersons = (isRandom) => {\r\n        if (startDate === \"\" || endDate === \"\") {\r\n            return alert(\"יש להכניס תאריך התחלה ותאריך סיום\");\r\n        }\r\n        if (!guardTime) {\r\n            return alert(\"יש להזין את משך זמן השמירה\");\r\n        }\r\n        if (guardTime <= 0) {\r\n            return alert(\"שמירה חייבת להיות מעל 0 דקות\");\r\n        }\r\n        if (persons.length <= 1) {\r\n            return alert(\"יש להכניס לפחות 2 שומרים\");\r\n        }\r\n        if (startDate >= endDate) {\r\n            return alert(\"זמן סוף השמירה חייב להיות גדול מזמן התחלת השמירה\");\r\n        }\r\n        setIsEqualTime(false);\r\n        setGuardsView(calculateGuards(persons, startDate, endDate, guardTime, minuteHour, isRandom));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"app\">\r\n                <form style={{ maxWidth: \"500px\", padding: \"3%\", backgroundColor: \"#fdfcedf0\", margin: \"3%\", borderRadius: \"5px\", boxShadow: \"black 1px 1px 20px 1px\" }}>\r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <Typography style={{\r\n                                margin: '0 auto'\r\n                            }} variant='h4' >  ברוכים הבאים!\r\n                    </Typography>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <Typography style={{\r\n                                margin: '0 auto'\r\n                            }} variant='h7' >  ה-אתר שיסדר לכם את השמירות\r\n                    </Typography>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                    <Time\r\n                        onChangeStartTime={(e) => setStartDate(e.target.value)}\r\n                        firstValue={startDate}\r\n                        onChangeEndTime={(e) => setEndDate(e.target.value)}\r\n                        secondValue={endDate}\r\n                    />\r\n                    <AddGuard\r\n                        value={currentPersonName}\r\n                        onChange={(e) => onChangePersonName(e)}\r\n                        onKeyDown={(e) => { handleKeyDown(e) }}\r\n                        onClick={(e) => { addToPersons(e) }}\r\n                    />\r\n                    {persons.length > 0 &&\r\n                        <div className=\"row\" style={{ marginTop: \"15px\" }}>\r\n                            {persons.map((name, index) => (\r\n                                <div key={index}>\r\n                                    <Chip\r\n                                        className=\"\"\r\n                                        size=\"small\"\r\n                                        label={`${index + 1}) ${name}`}\r\n                                        onDelete={() => deletePerson(index)}\r\n                                        color=\"default\"\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                    <div className=\"marginTop\">\r\n                        <ControlledAccordions\r\n                            calculatePersonsEvenTime={calculatePersonsEvenTime}\r\n                            guardTime={guardTime}\r\n                            setGuardTime={setGuardTime}\r\n                            minuteHour={minuteHour}\r\n                            calculatePersons={calculatePersons}\r\n                            setMinuteHour={setMinuteHour}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            {\r\n                guardsView.length > 0 ?\r\n                    <div>\r\n                        <hr />\r\n                        <div>\r\n                            <div className=\"row\">\r\n                                {isEqualTime ?\r\n                                    < Button variant=\"contained\" className={classesButton.margin} onClick={(e) => calculatePersonsEvenTime(true)} endIcon={<ExposureIcon style={{ marginRight: \"5px\" }}></ExposureIcon>} >\r\n                                        הגרל שוב זמן שווה\r\n                                    </Button>\r\n                                    :\r\n                                    < Button variant=\"contained\" className={classesButton.margin} onClick={(e) => calculatePersons(true)} endIcon={<ExposureIcon style={{ marginRight: \"5px\" }}></ExposureIcon>} >\r\n                                        הגרל שוב\r\n                                    </Button>\r\n                                }\r\n                                <Button\r\n                                    endIcon={<RefreshIcon style={{ marginRight: \"5px\" }}></RefreshIcon>}\r\n                                    style={{ margin: \"5px\" }}\r\n                                    onClick={() => window.location.reload(false)}\r\n                                    color=\"#e0e0e0\"\r\n                                    variant=\"contained\"\r\n                                >\r\n                                    הכל מהתחלה\r\n                            </Button>\r\n                                <ShareButton guardsView={guardsView}></ShareButton>\r\n                            </div>\r\n                            <Table guards={guardsView} />\r\n                        </div>\r\n                    </div>\r\n                    : \"\"\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Form;","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Time.jsx",["116","117"],"import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport const Time = (props) => {\r\n\r\n    const useStylesDateInput = makeStyles((theme) => ({\r\n        container: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    }));\r\n\r\n    const classesDateInput = useStylesDateInput();\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className={classesDateInput.container} noValidate>\r\n                <TextField\r\n                    className=\"element\"\r\n                    id=\"datetime-local\"\r\n                    label=\"תחילת זמן \"\r\n                    type=\"datetime-local\"\r\n                    onChange={(e) => props.onChangeStartTime(e)}\r\n                    value={props.firstValue}\r\n                    className={classesDateInput.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n\r\n                />\r\n                <TextField\r\n                    className=\"element\"\r\n                    id=\"datetime-local\"\r\n                    label=\"סיום זמן\"\r\n                    type=\"datetime-local\"\r\n                    onChange={(e) => props.onChangeEndTime(e)}\r\n                    value={props.secondValue}\r\n                    className={classesDateInput.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Accordion.jsx",["118","119","120"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport { GuardTime } from './GuardTime';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // width: '100%',\r\n    },\r\n    heading: {\r\n        // fontSize: theme.typography.pxToRem(15),\r\n        // flexBasis: '33.33%',\r\n        // flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        // fontSize: theme.typography.pxToRem(15),\r\n        // color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nconst useStylesButton = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport const ControlledAccordions = (props) => {\r\n\r\n    const { calculatePersonsEvenTime, guardTime, setGuardTime, minuteHour, calculatePersons, setMinuteHour } = props;\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const classesButton = useStylesButton();\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                >\r\n                    <Typography className={classes.heading}>חלוקה זמן שווה</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <div className=\"row marginTop\">\r\n                        <Button variant=\"contained\" className={classesButton.margin} className=\"randonGuard\" size=\"small\" onClick={(e) => calculatePersonsEvenTime(true)}>סדר רנדומלי</Button>\r\n                        <Button variant=\"contained\" className={classesButton.margin} className=\"randonGuard\" size=\"small\" onClick={(e) => calculatePersonsEvenTime(false)}>סדר לפי הכנסה</Button>\r\n                    </div>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel2bh-content\"\r\n                    id=\"panel2bh-header\"\r\n                >\r\n                    <Typography className={classes.heading}>הגדרת זמן שמירה</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <GuardTime\r\n                        valueGuardTime={guardTime}\r\n                        onChangeGuardTime={(e) => setGuardTime(e.target.value)}\r\n                        minuteHour={minuteHour}\r\n                        valueSelector={minuteHour}\r\n                        setMinuteHour={setMinuteHour}\r\n                    />\r\n                    <div className=\"CalculateButton\">\r\n                        <Button variant=\"contained\" className={classesButton.margin} className=\"randonGuard\" size=\"small\" onClick={(e) => calculatePersons(true)} >\r\n                            סדר רנדומלי\r\n                            </Button>\r\n                        <Button variant=\"contained\" className={classesButton.margin} size=\"small\" onClick={(e) => calculatePersons(false)} >\r\n                            סדר לפי הכנסה\r\n                             </Button>\r\n                    </div>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Table.jsx",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\ShareButton.jsx",["121","122","123","124"],"import React, { useState, useEffect } from 'react'\r\nimport { CastToDiconary } from '../algo/CastToDiconary';\r\nimport { WhatsappShareButton, WhatsappIcon } from \"react-share\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ShareButton = (props) => {\r\n    const { guardsView } = props;\r\n    // const [message, setMessage] = useState('');\r\n\r\n    const generateToText = () => {\r\n        let message = `*רשימת שמות:*\\n`;\r\n        guardsView.map(x => {\r\n            message += `${x.startTime.format('HH:mm')} - ${x.endTime.format('HH:mm')}  *${x.name.trim()}* \\n`;\r\n        });\r\n        return message;\r\n    }\r\n    // const generateToText = () => {\r\n    //     const guardsDictionary = CastToDiconary(guardsView);\r\n    //     let message = ``;\r\n    //     Object.entries(guardsDictionary).map(([key, value]) => {\r\n    //         let currentGuardMessage = `\r\n    //             *${key}* - סה\"כ *${value.length}* שמירות:\\n`;\r\n    //         value.map(x => {\r\n    //             currentGuardMessage += `משעה - ${x.startGuard.format('H:mm MM/DD')}, עד שעה - ${x.endGuard.format('H:mm MM/DD')}\\n`\r\n    //         });\r\n    //         message += currentGuardMessage;\r\n    //     });\r\n    //     return message\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     setMessage(generateToText());\r\n    // }, [guardsView])\r\n\r\n    return (\r\n        <div>\r\n            <WhatsappShareButton url={generateToText()}><Button variant=\"contained\" style={{ direction: \"ltr\" }} > <WhatsappIcon size={25} round={true}></WhatsappIcon>  שתף עם חבריך  </Button></WhatsappShareButton >\r\n        </div >\r\n    )\r\n}\r\nexport default ShareButton;","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\AddGuard.jsx",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\algo\\calculator.js",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\algo\\CastToDiconary.js",["125"],"export const CastToDiconary  = (guardsList) => {\r\n    let resultGuards = {};\r\n    guardsList.map((guard) =>{\r\n        if(guard.name in resultGuards){\r\n            resultGuards[guard.name].push({startGuard: guard.startTime, endGuard: guard.endTime});\r\n        }\r\n        else{\r\n            resultGuards[guard.name] =  [{startGuard: guard.startTime, endGuard: guard.endTime}]\r\n        }\r\n    });\r\n    return resultGuards;\r\n}\r\n\r\n\r\n","C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\GuardTime.jsx",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\shmirot-font\\src\\components\\Select.jsx",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\index.js",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\reportWebVitals.js",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\App.js",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Form.jsx",["126"],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\algo\\calculator.js",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Time.jsx",["127","128"],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\AddGuard.jsx",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Table.jsx",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\ShareButton.jsx",["129","130","131","132"],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Accordion.jsx",["133","134","135"],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\algo\\CastToDiconary.js",["136"],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\GuardTime.jsx",[],"C:\\Users\\ron\\Desktop\\Projects\\work\\stamdvarim\\shmirot-font\\src\\components\\Select.jsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":117,"column":53,"nodeType":"143","messageId":"144","endLine":117,"endColumn":55},{"ruleId":"145","severity":1,"message":"146","line":34,"column":21,"nodeType":"147","endLine":34,"endColumn":59},{"ruleId":"145","severity":1,"message":"146","line":47,"column":21,"nodeType":"147","endLine":47,"endColumn":59},{"ruleId":"145","severity":1,"message":"146","line":58,"column":86,"nodeType":"147","endLine":58,"endColumn":109},{"ruleId":"145","severity":1,"message":"146","line":59,"column":86,"nodeType":"147","endLine":59,"endColumn":109},{"ruleId":"145","severity":1,"message":"146","line":80,"column":86,"nodeType":"147","endLine":80,"endColumn":109},{"ruleId":"148","severity":1,"message":"149","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"152","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"153","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":24},{"ruleId":"154","severity":1,"message":"155","line":12,"column":26,"nodeType":"156","messageId":"157","endLine":12,"endColumn":28},{"ruleId":"154","severity":1,"message":"155","line":3,"column":28,"nodeType":"156","messageId":"157","endLine":3,"endColumn":30},{"ruleId":"141","severity":1,"message":"142","line":117,"column":53,"nodeType":"143","messageId":"144","endLine":117,"endColumn":55},{"ruleId":"145","severity":1,"message":"146","line":34,"column":21,"nodeType":"147","endLine":34,"endColumn":59},{"ruleId":"145","severity":1,"message":"146","line":47,"column":21,"nodeType":"147","endLine":47,"endColumn":59},{"ruleId":"148","severity":1,"message":"149","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"152","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"153","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":24},{"ruleId":"154","severity":1,"message":"155","line":12,"column":26,"nodeType":"156","messageId":"157","endLine":12,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":58,"column":86,"nodeType":"147","endLine":58,"endColumn":109},{"ruleId":"145","severity":1,"message":"146","line":59,"column":86,"nodeType":"147","endLine":59,"endColumn":109},{"ruleId":"145","severity":1,"message":"146","line":80,"column":86,"nodeType":"147","endLine":80,"endColumn":109},{"ruleId":"154","severity":1,"message":"155","line":3,"column":28,"nodeType":"156","messageId":"157","endLine":3,"endColumn":30},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'CastToDiconary' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]